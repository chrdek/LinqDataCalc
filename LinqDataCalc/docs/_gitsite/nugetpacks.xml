<?xml version="1.0" encoding="utf-8"?><feed xml:base="https://www.nuget.org/api/v2" xmlns="http://www.w3.org/2005/Atom" xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices" xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata" xmlns:georss="http://www.georss.org/georss" xmlns:gml="http://www.opengis.net/gml"><m:count>2</m:count><id>http://schemas.datacontract.org/2004/07/</id><title /><updated>2023-10-13T14:34:26Z</updated><link rel="self" href="https://www.nuget.org/api/v2/Packages" /><entry><id>https://www.nuget.org/api/v2/Packages(Id='LinqPath',Version='1.2.3')</id><category term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme" /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='LinqPath',Version='1.2.3')" /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='LinqPath',Version='1.2.3')" /><title type="text">LinqPath</title><summary type="text">This library aims to create relevant folder structures in bulk from a strongly-typed object collection.
      Currently, the following drive letters are implemented
      C: | D: | E: | F: | W: | X: | Y: | Z:

      General Usage as follow:
      Provided a collection definition of A 
       new A{ mainName1="name1",secondaryName2="sub2" },
       new A{ mainName1="name2",secondaryName="sub4" },
       new A{ mainName="name3",secondaryName="sub5" };
              .
              .
              .
          N objects of A  
          
      usage 1:
      A.Path(n=&gt;n.mainName1+"\\"+n=&gt;n.secondaryName2); This produces an N number of folders via names in form - C:\name1\sub2; C:\name2\sub4; C:\name3\sub5;
      usage 2:
      A.Path(n=&gt;n.mainName1,n=&gt;n.secondaryName2); This produces an N number of folders via names in form - C:\name1; C:\sub2; C:\name2; C:\sub4; C:\name3; C:\sub5;
      change hard disk letter:
      A.Path(drive.ExternalD,n=&gt;n.mainName1+"\\"+n=&gt;n.secondaryName2); This writes folders to directory D:\;</summary><updated>2021-01-07T17:41:26Z</updated><author><name>Chr. Dk.</name></author><content type="application/zip" src="https://www.nuget.org/api/v2/package/LinqPath/1.2.3" /><m:properties><d:Id>LinqPath</d:Id><d:Version>1.2.3</d:Version><d:NormalizedVersion>1.2.3</d:NormalizedVersion><d:Authors>Chr. Dk.</d:Authors><d:Copyright>2020</d:Copyright><d:Created m:type="Edm.DateTime">2021-01-07T17:41:26.87+00:00</d:Created><d:Dependencies></d:Dependencies><d:Description>Recommended for backup folder structures and logging purposes.</d:Description><d:DownloadCount m:type="Edm.Int64">5444</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/LinqPath/1.2.3</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/linqpath/1.2.3/icon</d:IconUrl><d:IsLatestVersion m:type="Edm.Boolean">true</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">true</d:IsAbsoluteLatestVersion><d:IsPrerelease m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated m:type="Edm.DateTime">2021-01-07T17:41:26.87+00:00</d:LastUpdated><d:Published m:type="Edm.DateTime">2021-01-07T17:41:26.87+00:00</d:Published><d:PackageHash>PK11Zgqcr0hsO3383HvMeC25Hsv2f/d/pxowPEhq5ZJUf4QhL/u9iPPfcceXlUS90DZCt9DDA1mJ5m047KLb7Q==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize m:type="Edm.Int64">27526</d:PackageSize><d:ProjectUrl m:null="true" /><d:ReportAbuseUrl>https://www.nuget.org/packages/LinqPath/1.2.3/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>Initial version, allows simple folder creation from strongly typed collections</d:ReleaseNotes><d:RequireLicenseAcceptance m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary>This library aims to create relevant folder structures in bulk from a strongly-typed object collection.
      Currently, the following drive letters are implemented
      C: | D: | E: | F: | W: | X: | Y: | Z:

      General Usage as follow:
      Provided a collection definition of A 
       new A{ mainName1="name1",secondaryName2="sub2" },
       new A{ mainName1="name2",secondaryName="sub4" },
       new A{ mainName="name3",secondaryName="sub5" };
              .
              .
              .
          N objects of A  
          
      usage 1:
      A.Path(n=&gt;n.mainName1+"\\"+n=&gt;n.secondaryName2); This produces an N number of folders via names in form - C:\name1\sub2; C:\name2\sub4; C:\name3\sub5;
      usage 2:
      A.Path(n=&gt;n.mainName1,n=&gt;n.secondaryName2); This produces an N number of folders via names in form - C:\name1; C:\sub2; C:\name2; C:\sub4; C:\name3; C:\sub5;
      change hard disk letter:
      A.Path(drive.ExternalD,n=&gt;n.mainName1+"\\"+n=&gt;n.secondaryName2); This writes folders to directory D:\;</d:Summary><d:Tags>Linq path Path directory directories generatedir dir generatedir dirgenerator Linqtopath Linq2Path</d:Tags><d:Title>Linq based objects to folder creation utility</d:Title><d:VersionDownloadCount m:type="Edm.Int64">2689</d:VersionDownloadCount><d:MinClientVersion m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-01-07T18:01:52.02+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/LinqPath/1.2.3/license</d:LicenseUrl><d:LicenseNames m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry><entry><id>https://www.nuget.org/api/v2/Packages(Id='LinqDataCalc',Version='1.0.2.6')</id><category term="NuGetGallery.OData.V2FeedPackage" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme" /><link rel="edit" href="https://www.nuget.org/api/v2/Packages(Id='LinqDataCalc',Version='1.0.2.6')" /><link rel="self" href="https://www.nuget.org/api/v2/Packages(Id='LinqDataCalc',Version='1.0.2.6')" /><title type="text">LinqDataCalc</title><summary type="text">This set of extension methods serves as a data calculations and statistical operations suite
	based on Linq.
	
	Some basic statistics functions that are implemented are as displayed below:

	- MEAN()
	- MEDIAN()
	- STDEVP()
	- EXPECTEDVAL()

	NOTE: LinqDataCalc also implements a variety of randomized data generation methods and 
        random list selection methodologies based on sets.</summary><updated>2021-08-10T19:08:41Z</updated><author><name>Chr. Dk.</name></author><content type="application/zip" src="https://www.nuget.org/api/v2/package/LinqDataCalc/1.0.2.6" /><m:properties><d:Id>LinqDataCalc</d:Id><d:Version>1.0.2.6</d:Version><d:NormalizedVersion>1.0.2.6</d:NormalizedVersion><d:Authors>Chr. Dk.</d:Authors><d:Copyright>2021</d:Copyright><d:Created m:type="Edm.DateTime">2021-08-10T19:08:41.723+00:00</d:Created><d:Dependencies></d:Dependencies><d:Description>Recommended for simple data calculations, data science and statistical operations.</d:Description><d:DownloadCount m:type="Edm.Int64">657</d:DownloadCount><d:GalleryDetailsUrl>https://www.nuget.org/packages/LinqDataCalc/1.0.2.6</d:GalleryDetailsUrl><d:IconUrl>https://api.nuget.org/v3-flatcontainer/linqdatacalc/1.0.2.6/icon</d:IconUrl><d:IsLatestVersion m:type="Edm.Boolean">true</d:IsLatestVersion><d:IsAbsoluteLatestVersion m:type="Edm.Boolean">true</d:IsAbsoluteLatestVersion><d:IsPrerelease m:type="Edm.Boolean">false</d:IsPrerelease><d:Language m:null="true" /><d:LastUpdated m:type="Edm.DateTime">2021-08-10T19:08:41.723+00:00</d:LastUpdated><d:Published m:type="Edm.DateTime">2021-08-10T19:08:41.723+00:00</d:Published><d:PackageHash>Pvy6eKbVQZdkVZWyVK0Yg4hiZi3lCbqbBFrj0g748vIvOa8YSxms7CQ2hIJByKgshYaYTA/ycGtz9S3ggL6gWA==</d:PackageHash><d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm><d:PackageSize m:type="Edm.Int64">77688</d:PackageSize><d:ProjectUrl m:null="true" /><d:ReportAbuseUrl>https://www.nuget.org/packages/LinqDataCalc/1.0.2.6/ReportAbuse</d:ReportAbuseUrl><d:ReleaseNotes>Latest (v1.0.2.6)</d:ReleaseNotes><d:RequireLicenseAcceptance m:type="Edm.Boolean">false</d:RequireLicenseAcceptance><d:Summary>This set of extension methods serves as a data calculations and statistical operations suite
	based on Linq.
	
	Some basic statistics functions that are implemented are as displayed below:

	- MEAN()
	- MEDIAN()
	- STDEVP()
	- EXPECTEDVAL()

	NOTE: LinqDataCalc also implements a variety of randomized data generation methods and 
        random list selection methodologies based on sets.</d:Summary><d:Tags>Linq Data data extension DataScience LinqAnalytics Analytics statistics stats LinqStats LinqCalc LinqDataCalc</d:Tags><d:Title>Linq Data Calculation Extension Methods used for statistics, data analysis</d:Title><d:VersionDownloadCount m:type="Edm.Int64">301</d:VersionDownloadCount><d:MinClientVersion m:null="true" /><d:LastEdited m:type="Edm.DateTime">2021-08-10T19:10:42.917+00:00</d:LastEdited><d:LicenseUrl>https://www.nuget.org/packages/LinqDataCalc/1.0.2.6/license</d:LicenseUrl><d:LicenseNames m:null="true" /><d:LicenseReportUrl m:null="true" /></m:properties></entry></feed>